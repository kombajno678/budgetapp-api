"""schedules use arrays

Revision ID: b09f2b3162b4
Revises: 97c5439d8beb
Create Date: 2020-11-21 09:19:47.485606

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b09f2b3162b4'
down_revision = '97c5439d8beb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fixed_point')
    op.drop_table('operation')
    op.drop_table('scheduled_operation')
    op.drop_table('schedule')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedule',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('schedule_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('timestamp', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('year', postgresql.ARRAY(sa.INTEGER()),
                              autoincrement=False, nullable=True),
                    sa.Column('month', postgresql.ARRAY(sa.INTEGER()),
                              autoincrement=False, nullable=True),
                    sa.Column('day_of_month', postgresql.ARRAY(sa.INTEGER()),
                              autoincrement=False, nullable=True),
                    sa.Column('day_of_week', postgresql.ARRAY(sa.INTEGER()),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], name='schedule_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='schedule_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('scheduled_operation',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('scheduled_operation_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('timestamp', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('value', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('schedule_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(
                        ['schedule_id'], ['schedule.id'], name='scheduled_operation_schedule_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], name='scheduled_operation_user_id_fkey'),
                    sa.PrimaryKeyConstraint(
                        'id', name='scheduled_operation_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('user',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('created', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('auth_id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='user_pkey'),
                    sa.UniqueConstraint('auth_id', name='user_auth_id_key'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('operation',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('timestamp', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('value', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('scheduled_operation_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('when', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['scheduled_operation_id'], [
                        'scheduled_operation.id'], name='operation_scheduled_operation_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], name='operation_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='operation_pkey')
                    )
    op.create_table('fixed_point',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('timestamp', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('when', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=False),
                    sa.Column('exact_value', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], name='fixed_point_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='fixed_point_pkey')
                    )
    # ### end Alembic commands ###
